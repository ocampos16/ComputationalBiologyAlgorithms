/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cb_homework2;

import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author Otto
 */
public class Homework2_MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form Homework2_MainWindow
     */
        
    private File opened_file;
    Sequence _targetSequence = new Sequence (">Sequence_of_Interest", "EHBEGCHBGBCGCHBGBEEGCHBGBEEGCHBGBECDDBFCGFEGDAFCFDGHFFBABHHBCDDACCCGCBFHFGFGEFAEDGADBHFHHADDBEHDDBCFGFCDCCDCGFBAFEBDBDDBEBBHBGBEEEEHHCCHBDHEDHAFAGADHEBHCABAFBHCFDCBAGACFFAHFFHABHBBDAEFFAGAGGEECFEAGGBCHBBGBGCDDBDFEABHFFBGFBFABGCBCFHFAFBFAFGDGCCFCAGGBBGCGCHFBFGDDBFGFBGCGBEBDHCFBFAGDCECBBGADCEBAHHBEHFCCDFADFEGHCEGFAHBDGGBCEAADBHHHBDEBBFHABACHBHCDFFEHFFHCHDBEBDEEHGAAHFHADAAFBFAAHECGGFHGGAGBHFADCBEFAAGEACHFGDGCHEEGCAEEBFABGGDGFCGECAEHCDBHABHDEHEFCDADBDBCAFCGCFCGEDCAGBBCBFDEEGCGGADFFDHAA");
    ArrayList<Sequence> _sequences = new ArrayList();
    private ListModelSequence _model;
    private GlobalAlignment _global = new GlobalAlignment();
    private LocalAlignment _local = new LocalAlignment();
    ButtonGroup _btnGroup;
    
    public Homework2_MainWindow() {
        
        initComponents();        
        this.setLocationRelativeTo(null);        
        
        this.txtTarget.setText(this._targetSequence.getName());
        this.txtTSequence.setText(this._targetSequence.getSequence());
        
        //Radio Button Group
        this._btnGroup = new ButtonGroup();
        this._btnGroup.add(rBtnLocal);
        this._btnGroup.add(rBtnGlobal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        lblTarget = new javax.swing.JLabel();
        scrHighestScores = new javax.swing.JScrollPane();
        lstHighestScores = new javax.swing.JList();
        lblHighestScores = new javax.swing.JLabel();
        lblSequenceFile = new javax.swing.JLabel();
        txtTarget = new javax.swing.JTextField();
        txtSequenceFile = new javax.swing.JTextField();
        pnlScores = new javax.swing.JPanel();
        lblAlignmentType = new javax.swing.JLabel();
        rBtnLocal = new javax.swing.JRadioButton();
        rBtnGlobal = new javax.swing.JRadioButton();
        btnExecute = new javax.swing.JButton();
        btnBrowseFile = new javax.swing.JButton();
        lblAlignment = new javax.swing.JLabel();
        pnlAlignment = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTSequence = new javax.swing.JTextArea();

        fileChooser.setCurrentDirectory(new File("src\\TextFiles"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Planet X");

        lblTarget.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTarget.setText("Target Sequence");

        lstHighestScores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstHighestScoresValueChanged(evt);
            }
        });
        scrHighestScores.setViewportView(lstHighestScores);

        lblHighestScores.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHighestScores.setText("Highest Score Sequences");

        lblSequenceFile.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSequenceFile.setText("Sequence File");

        txtSequenceFile.setEditable(false);

        pnlScores.setLayout(new java.awt.GridLayout(1, 0));

        lblAlignmentType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAlignmentType.setText("Alignment Type");
        pnlScores.add(lblAlignmentType);

        rBtnLocal.setSelected(true);
        rBtnLocal.setText("Local Alignment");
        pnlScores.add(rBtnLocal);

        rBtnGlobal.setText("Global Alignment");
        pnlScores.add(rBtnGlobal);

        btnExecute.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnExecute.setText("Execute");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });
        pnlScores.add(btnExecute);

        btnBrowseFile.setText("Browse File");
        btnBrowseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseFileActionPerformed(evt);
            }
        });

        lblAlignment.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAlignment.setText("Alignment");

        pnlAlignment.setBackground(new java.awt.Color(204, 204, 255));
        pnlAlignment.setLayout(new java.awt.CardLayout());

        txtTSequence.setColumns(20);
        txtTSequence.setRows(5);
        txtTSequence.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtTSequence);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrHighestScores, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlAlignment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlScores, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHighestScores, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAlignment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSequenceFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSequenceFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBrowseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTarget, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblSequenceFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSequenceFile)
                    .addComponent(btnBrowseFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlScores, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHighestScores, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAlignment, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrHighestScores, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                    .addComponent(pnlAlignment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseFileActionPerformed
        // TODO add your handling code here:                    
        int choice = this.fileChooser.showOpenDialog(null);
        Scanner reader;
        
        if ( choice == JFileChooser.APPROVE_OPTION )
        {
            // Select the file
            this.opened_file = this.fileChooser.getSelectedFile();
            this.txtSequenceFile.setText(this.opened_file.getPath());
            
            try {
                
                reader = new Scanner(new FileInputStream(this.opened_file.getAbsoluteFile()));
                this._model = new ListModelSequence();
                
                // Add it to the text pane
                try
                {

                    while (reader.hasNext()) {      // while there is another token to read
                        String name = reader.next();   // reads in the String tokens "Hello" "CSstudents"                                                                        
                        String sequence = reader.next();   // reads in the String tokens "There" "goodbye"
                                                
                        this._sequences.add(new Sequence(name, sequence));                        
                        
                    }                                                                                               
                    
                }
                catch (Exception e )
                {

                    e.printStackTrace();
                    
                }                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Homework2_MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            

        }        
        
    }//GEN-LAST:event_btnBrowseFileActionPerformed

    private void lstHighestScoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstHighestScoresValueChanged
        // TODO add your handling code here:
        
//        this.pnlAlignment.removeAll();
//        
//        //We get the selected sequence
//        Sequence selectedSequence = (Sequence)this.lstHighestScores.getSelectedValue();
//        
//        final int columnNumber = selectedSequence.getAlignment().size();
//        final int rowNumber = 3;
//        
//        Object[][] sequenceData = new Object[rowNumber][columnNumber];        
//        
//        int i = 0;
//        for (Alignment alg : selectedSequence.getAlignment()) {
//            
//            //Write one alignment
//            sequenceData[0][i] = alg.getSequence1Char();
//            sequenceData[1][i] = alg.getAlignmentType();
//            sequenceData[2][i] = alg.getSequence2Char();             
//            i++;
//            
//        }//End for (Alignment alg : selectedSequence.getAlignment())
//        
//        String[] columnNames = new String[columnNumber];
//        
//        for (int j = 0; j < columnNumber; j++) {
//            
//            columnNames[j] = ""+j+1;
//            
//        }//End for (int j = 1; j < columnNumber; j++)       

//        ArrayList<Object> columnsSelect = new ArrayList();
////        columnsSelect.add(this.studentTable);
//        //columnsSelect.add(this.departmentTable);
//        
//        int numColumns = 2;
//        int numRows = 1;
//        
//        Object[][] data = new Object[numRows][numColumns];
//                
//        data[0][0] = selectedSequence.getName();
//        data[0][1] = selectedSequence.getSequence();
        
//        JTable table = new JTable(sequenceData, columnNames);           
//        //table.setPreferredScrollableViewportSize(new Dimension(500, 500));
//        //table.setFillsViewportHeight(true);
////        
////TableColumnModel tcm = table.getColumnModel();
////
////        for (String string : columnNames) {
////            
////        }
//
//
// 
//        //Create the scroll pane and add the table to it.
//        JScrollPane scrollPane = new JScrollPane(table);
//        scrollPane.setAutoscrolls(true);
//                
//        //Add the scroll pane to this panel.
//        this.pnlAlignment.add(scrollPane);
//        pack();        
        
        //this.pnlAlignment.add(scrollPane);
        
    }//GEN-LAST:event_lstHighestScoresValueChanged

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        // TODO add your handling code here:        
        
        //Now we perfom Global Alignment algorithm
        for (Sequence s : this._sequences) {

            ArrayList<Alignment> temp;
            
            if (this.rBtnGlobal.isSelected())
                temp = this._global.execute(this._targetSequence.getSequence(), s.getSequence());
            else
                temp = this._local.execute(this._targetSequence.getSequence(), s.getSequence());
            
            s.setAlignment(temp);
            s.calculateScore();

        }//End for (Sequence s : this._sequences)

        this._model.setList(_sequences);
        this._model.sort();
        Collections.reverse(this._model._sequence);

        this.lstHighestScores.setModel(_model);                                          
                
    }//GEN-LAST:event_btnExecuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homework2_MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Homework2_MainWindow().setVisible(true);
            }
        });
    }     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseFile;
    private javax.swing.JButton btnExecute;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlignment;
    private javax.swing.JLabel lblAlignmentType;
    private javax.swing.JLabel lblHighestScores;
    private javax.swing.JLabel lblSequenceFile;
    private javax.swing.JLabel lblTarget;
    private javax.swing.JList lstHighestScores;
    private javax.swing.JPanel pnlAlignment;
    private javax.swing.JPanel pnlScores;
    private javax.swing.JRadioButton rBtnGlobal;
    private javax.swing.JRadioButton rBtnLocal;
    private javax.swing.JScrollPane scrHighestScores;
    private javax.swing.JTextField txtSequenceFile;
    private javax.swing.JTextArea txtTSequence;
    private javax.swing.JTextField txtTarget;
    // End of variables declaration//GEN-END:variables
}
